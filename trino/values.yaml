# Default values for trino.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: trinodb/trino
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart version.
  tag: latest

server:
  jvm:
    maxHeapSize: 8G # ONLY for local development!
    gcMethod:
      type: "UseG1GC"
      g1:
        heapRegionSize: "32M"
  workers: 2
  node:
    environment: production
    dataDir: /data/trino
    pluginDir: /usr/lib/trino/plugin
  log:
    trino:
      level: INFO
  config:
    memory:
      heapHeadroomPerNode: 1GB # ONLY for local development!
    query:
      maxMemory: 4GB # ONLY for local development!
      maxMemoryPerNode: 1GB # ONLY for local development!
    path: /etc/trino
    http:
      port: 8080
    https:
      enabled: false
      port: 8443
      keystore:
        path: ""
  # NOTE: Possibly required on the workers as well, but
  # I don't think so.
  coordinatorExtraConfig: ""
    # http-server.process-forwarded=true
    # http-server.authentication.type=JWT
    # http-server.authentication.jwt.key-file=http://localhost:8090/openid/v1/jwks
    # http-server.authentication.jwt.user-mapping.pattern=^system:serviceaccount:([^:]+):default$
  exchangeManager:
    name: "filesystem"
    baseDir: "/tmp/trino-local-file-system-exchange-manager"
  workerExtraConfig: ""
  autoscaling:
    enabled: false
    maxReplicas: 5
    targetCPUUtilizationPercentage: 50

additionalNodeProperties: {}

additionalJVMConfig: {}

additionalConfigProperties: {}

additionalLogProperties: {}

additionalExchangeManagerProperties: {}

additionalCatalogs:
  # TODO: Passwords should be secrets. :)
  postgresql: |
    connector.name=postgresql
    connection-url=jdbc:postgresql://postgresql-datasource.postgresql-datasource:5432/autos
    connection-user=trino
    connection-password=Q1zx10EMuU21aEgAZm4kJm9DrD0EjjzIYE8y01Ea
  minio: |
    connector.name=hive-hadoop2
    hive.metastore.uri=thrift://hive-metastore.hive-system:9083
    hive.s3.path-style-access=true
    hive.s3.endpoint=http://minio.minio-system:9000
    hive.s3.aws-access-key=trino
    hive.s3.aws-secret-key=Q1zx10EMuU21aEgAZm4kJm9DrD0EjjzIYE8y01Ea
    hive.non-managed-table-writes-enabled=true
    hive.s3select-pushdown.enabled=true
    hive.storage-format=ORC


# Array of EnvVar (https://v1-18.docs.kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#envvar-v1-core)
env: []

initContainers: {}
  # coordinator:
  #   - name: init-coordinator
  #     image: busybox:1.28
  #     imagePullPolicy: IfNotPresent
  #     command: ['sh', '-c', "until nslookup myservice.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for myservice; sleep 2; done"]
  # worker:
  #   - name: init-worker
  #     image: busybox:1.28
  #     command: ['sh', '-c', 'echo The worker is running! && sleep 3600']

securityContext:
  runAsUser: 1000
  runAsGroup: 1000

service:
  type: ClusterIP
  port: 8080

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  # Annotations to add to the service account
  annotations: {}

secretMounts: []

